# // Create the Stackdriver Export Sink for gce_firewall_rule Notifications
# resource "google_logging_project_sink" "gce_firewall_rule" {
#   name        = "gcp_gce_firewall_rule"
#   destination = "bigquery.googleapis.com/projects/${var.project}/datasets/${google_bigquery_dataset.gcp-bigquery-dataset.dataset_id}"
#   filter      = "resource.type = gce_firewall_rule"

#   unique_writer_identity = true
# }

# // Create the Stackdriver Export Sink for gce_forwarding_rule Notifications
# resource "google_logging_project_sink" "gce_forwarding_rule" {
#   name        = "gcp_gce_forwarding_rule"
#   destination = "bigquery.googleapis.com/projects/${var.project}/datasets/${google_bigquery_dataset.gcp-bigquery-dataset.dataset_id}"
#   filter      = "resource.type = gce_forwarding_rule"

#   unique_writer_identity = true
# }

# // Create the Stackdriver Export Sink for gce_network Notifications
# resource "google_logging_project_sink" "gce_network" {
#   name        = "gcp_gce_network"
#   destination = "bigquery.googleapis.com/projects/${var.project}/datasets/${google_bigquery_dataset.gcp-bigquery-dataset.dataset_id}"
#   filter      = "resource.type = gce_network"

#   unique_writer_identity = true
# }

# // Create the Stackdriver Export Sink for gce_instance Notifications
# resource "google_logging_project_sink" "gce_instance" {
#   name        = "gcp_gce_instance"
#   destination = "bigquery.googleapis.com/projects/${var.project}/datasets/${google_bigquery_dataset.gcp-bigquery-dataset.dataset_id}"

#   # filter      = "resource.type = gce_instance resource.type = gce_instance jsonPayload._CMDLINE!=""/home/kubernetes/bin/kubelet --v=2 --max-pods=110 --kube-reserved=cpu=60m,memory=960Mi --allow-privileged=true --cgroup-root=/ --cloud-provider=gce --cluster-dns=10.55.240.10 --cluster-domain=cluster.local --pod-manifest-path=/etc/kubernetes/manifests --experimental-mounter-path=/home/kubernetes/containerized_mounter/mounter --experimental-check-node-capabilities-before-mount=true --cert-dir=/var/lib/kubelet/pki/ --enable-debugging-handlers=true --bootstrap-kubeconfig=/var/lib/kubelet/bootstrap-kubeconfig --kubeconfig=/var/lib/kubelet/kubeconfig --anonymous-auth=false --authorization-mode=Webhook --client-ca-file=/etc/srv/kubernetes/pki/ca-certificates.crt --cni-bin-dir=/home/kubernetes/bin --network-plugin=kubenet --volume-plugin-dir=/home/kubernetes/flexvolume --node-labels=beta.kubernetes.io/fluentd-ds-ready=true,cloud.google.com/gke-nodepool=default-pool --eviction-hard=memory.available<100Mi,nodefs.available<10%,nodefs.inodesFree<5% --feature-gates=ExperimentalCriticalPodAnnotation=true"" jsonPayload._CMDLINE!=""/usr/bin/dockerd --registry-mirror=https://mirror.gcr.io --host=fd:// -p /var/run/docker.pid --iptables=false --ip-masq=false --log-level=warn --bip=169.254.123.1/24 --registry-mirror=https://mirror.gcr.io --log-driver=json-file --log-opt=max-size=10m --log-opt=max-file=5 --live-restore=false --insecure-registry 10.0.0.0/8"
#   filter                 = "resource.type = gce_instance"
#   unique_writer_identity = true
# }

# // Create the Stackdriver Export Sink for gce_instance_group_manager Notifications
# resource "google_logging_project_sink" "gce_instance_group_manager" {
#   name                   = "gcp_gce_instance_group_manager"
#   destination            = "bigquery.googleapis.com/projects/${var.project}/datasets/${google_bigquery_dataset.gcp-bigquery-dataset.dataset_id}"
#   filter                 = "resource.type = gce_instance_group_manager"
#   unique_writer_identity = true
# }

# // Create the Stackdriver Export Sink for gce_instance_template Notifications
# resource "google_logging_project_sink" "gce_instance_template" {
#   name                   = "gcp_gce_gce_instance_template"
#   destination            = "bigquery.googleapis.com/projects/${var.project}/datasets/${google_bigquery_dataset.gcp-bigquery-dataset.dataset_id}"
#   filter                 = "resource.type = gce_instance_template"
#   unique_writer_identity = true
# }

# // Create the Stackdriver Export Sink for gce_health_check Notifications
# resource "google_logging_project_sink" "gce_health_check" {
#   name        = "gcp_gce_health_check"
#   destination = "bigquery.googleapis.com/projects/${var.project}/datasets/${google_bigquery_dataset.gcp-bigquery-dataset.dataset_id}"
#   filter      = "resource.type = gce_health_check"

#   unique_writer_identity = true
# }

# // Create the Stackdriver Export Sink for gce_project Notifications
# resource "google_logging_project_sink" "gce_project" {
#   name        = "gcp_gce_project"
#   destination = "bigquery.googleapis.com/projects/${var.project}/datasets/${google_bigquery_dataset.gcp-bigquery-dataset.dataset_id}"
#   filter      = "resource.type = gce_project"

#   unique_writer_identity = true
# }

# // Create the Stackdriver Export Sink for gce_reserved_address Notifications
# resource "google_logging_project_sink" "gce_reserved_address" {
#   name        = "gcp_gce_reserved_address"
#   destination = "bigquery.googleapis.com/projects/${var.project}/datasets/${google_bigquery_dataset.gcp-bigquery-dataset.dataset_id}"
#   filter      = "resource.type = gce_reserved_address"

#   unique_writer_identity = true
# }

# // Create the Stackdriver Export Sink for gce_route Notifications
# resource "google_logging_project_sink" "gce_route" {
#   name        = "gcp_gce_route"
#   destination = "bigquery.googleapis.com/projects/${var.project}/datasets/${google_bigquery_dataset.gcp-bigquery-dataset.dataset_id}"
#   filter      = "resource.type = gce_route"

#   unique_writer_identity = true
# }

# // Create the Stackdriver Export Sink for gce_subnetwork Notifications
# resource "google_logging_project_sink" "gce_subnetwork" {
#   name        = "gcp_gce_subnetwork"
#   destination = "bigquery.googleapis.com/projects/${var.project}/datasets/${google_bigquery_dataset.gcp-bigquery-dataset.dataset_id}"
#   filter      = "resource.type = gce_subnetwork"

#   unique_writer_identity = true
# }

# // Create the Stackdriver Export Sink for gce_target_pool Notifications
# resource "google_logging_project_sink" "gce_target_pool" {
#   name        = "gcp_gce_target_pool"
#   destination = "bigquery.googleapis.com/projects/${var.project}/datasets/${google_bigquery_dataset.gcp-bigquery-dataset.dataset_id}"
#   filter      = "resource.type = gce_target_pool"

#   unique_writer_identity = true
# }

# // Create the Stackdriver Export Sink for gcs_bucket Notifications
# resource "google_logging_project_sink" "gcs_bucket" {
#   name        = "gcp_gcs_bucket"
#   destination = "bigquery.googleapis.com/projects/${var.project}/datasets/${google_bigquery_dataset.gcp-bigquery-dataset.dataset_id}"
#   filter      = "resource.type = gcs_bucket"

#   unique_writer_identity = true
# }

# // Create the Stackdriver Export Sink for gke_cluster Notifications
# resource "google_logging_project_sink" "gke_cluster" {
#   name        = "gcp_gke_cluster"
#   destination = "bigquery.googleapis.com/projects/${var.project}/datasets/${google_bigquery_dataset.gcp-bigquery-dataset.dataset_id}"
#   filter      = "resource.type = gke_cluster"

#   unique_writer_identity = true
# }

# // Create the Stackdriver Export Sink for container Notifications
# resource "google_logging_project_sink" "container" {
#   name        = "gcp_container"
#   destination = "bigquery.googleapis.com/projects/${var.project}/datasets/${google_bigquery_dataset.gcp-bigquery-dataset.dataset_id}"
#   filter      = "resource.type = container"

#   unique_writer_identity = true
# }

# // Create the Stackdriver Export Sink for GCP project Notifications
# resource "google_logging_project_sink" "project" {
#   name        = "gcp_project"
#   destination = "bigquery.googleapis.com/projects/${var.project}/datasets/${google_bigquery_dataset.gcp-bigquery-dataset.dataset_id}"
#   filter      = "resource.type = project"

#   unique_writer_identity = true
# }

# // Create the Stackdriver Export Sink for k8s_cluster Notifications
# resource "google_logging_project_sink" "k8s_cluster" {
#   name        = "gcp_k8s_cluster"
#   destination = "bigquery.googleapis.com/projects/${var.project}/datasets/${google_bigquery_dataset.gcp-bigquery-dataset.dataset_id}"
#   filter      = "resource.type = k8s_cluster"

#   unique_writer_identity = true
# }

# // Create the Stackdriver Export Sink for k8s_cluster Notifications
# resource "google_logging_project_sink" "logging_sink" {
#   name        = "gcp_logging_sink"
#   destination = "bigquery.googleapis.com/projects/${var.project}/datasets/${google_bigquery_dataset.gcp-bigquery-dataset.dataset_id}"
#   filter      = "resource.type = logging_sink"

#   unique_writer_identity = true
# }

# // Create the Stackdriver Export Sink for k8s_cluster Notifications
# resource "google_logging_project_sink" "service_account" {
#   name        = "gcp_service_account"
#   destination = "bigquery.googleapis.com/projects/${var.project}/datasets/${google_bigquery_dataset.gcp-bigquery-dataset.dataset_id}"
#   filter      = "resource.type = service_account"

#   unique_writer_identity = true
# }

# /*
# Create the export facilities
# */

# // Create the Stackdriver Export Sink for audited_resource Notifications
# resource "google_logging_project_sink" "audited_resource" {
#   name        = "gcp-audited_resource"
#   destination = "bigquery.googleapis.com/projects/${var.project}/datasets/${google_bigquery_dataset.gcp-bigquery-dataset.dataset_id}"
#   filter      = "resource.type =audited_resource"

#   unique_writer_identity = true
# }

# // Grant BigQuery Data Editor role to exports
# resource "google_project_iam_binding" "log-writer-bigquery" {
#   role = "roles/bigquery.dataEditor"

#   members = [
#     "${google_logging_project_sink.bigquery-sink.writer_identity}",
#   ]
# }

# resource "google_project_iam_binding" "log-gce_firewall_rule" {
#   role = "roles/bigquery.dataEditor"

#   members = [
#     "${google_logging_project_sink.gce_firewall_rule.writer_identity}",
#   ]
# }

# resource "google_project_iam_binding" "log-audited_resource" {
#   role = "roles/bigquery.dataEditor"

#   members = [
#     "${google_logging_project_sink.audited_resource.writer_identity}",
#   ]
# }

# resource "google_project_iam_binding" "gce_forwarding_rule" {
#   role = "roles/bigquery.dataEditor"

#   members = [
#     "${google_logging_project_sink.gce_forwarding_rule.writer_identity}",
#   ]
# }

# resource "google_project_iam_binding" "gce_network" {
#   role = "roles/bigquery.dataEditor"

#   members = [
#     "${google_logging_project_sink.gce_network.writer_identity}",
#   ]
# }

# resource "google_project_iam_binding" "gce_instance" {
#   role = "roles/bigquery.dataEditor"

#   members = [
#     "${google_logging_project_sink.gce_instance.writer_identity}",
#   ]
# }

# resource "google_project_iam_binding" "gce_instance_group_manager" {
#   role = "roles/bigquery.dataEditor"

#   members = [
#     "${google_logging_project_sink.gce_instance_group_manager.writer_identity}",
#   ]
# }

# resource "google_project_iam_binding" "gce_instance_template" {
#   role = "roles/bigquery.dataEditor"

#   members = [
#     "${google_logging_project_sink.gce_instance_template.writer_identity}",
#   ]
# }

# resource "google_project_iam_binding" "gce_health_check" {
#   role = "roles/bigquery.dataEditor"

#   members = [
#     "${google_logging_project_sink.gce_health_check.writer_identity}",
#   ]
# }

# resource "google_project_iam_binding" "gce_project" {
#   role = "roles/bigquery.dataEditor"

#   members = [
#     "${google_logging_project_sink.gce_project.writer_identity}",
#   ]
# }

# resource "google_project_iam_binding" "gce_reserved_address" {
#   role = "roles/bigquery.dataEditor"

#   members = [
#     "${google_logging_project_sink.gce_reserved_address.writer_identity}",
#   ]
# }

# resource "google_project_iam_binding" "gce_route" {
#   role = "roles/bigquery.dataEditor"

#   members = [
#     "${google_logging_project_sink.gce_route.writer_identity}",
#   ]
# }

# resource "google_project_iam_binding" "gce_subnetwork" {
#   role = "roles/bigquery.dataEditor"

#   members = [
#     "${google_logging_project_sink.gce_subnetwork.writer_identity}",
#   ]
# }

# resource "google_project_iam_binding" "gce_target_pool" {
#   role = "roles/bigquery.dataEditor"

#   members = [
#     "${google_logging_project_sink.gce_target_pool.writer_identity}",
#   ]
# }

# resource "google_project_iam_binding" "gcs_bucket" {
#   role = "roles/bigquery.dataEditor"

#   members = [
#     "${google_logging_project_sink.gcs_bucket.writer_identity}",
#   ]
# }

# resource "google_project_iam_binding" "gke_cluster" {
#   role = "roles/bigquery.dataEditor"

#   members = [
#     "${google_logging_project_sink.gke_cluster.writer_identity}",
#   ]
# }

# resource "google_project_iam_binding" "container" {
#   role = "roles/bigquery.dataEditor"

#   members = [
#     "${google_logging_project_sink.container.writer_identity}",
#   ]
# }

# resource "google_project_iam_binding" "project" {
#   role = "roles/bigquery.dataEditor"

#   members = [
#     "${google_logging_project_sink.project.writer_identity}",
#   ]
# }

# resource "google_project_iam_binding" "k8s_cluster" {
#   role = "roles/bigquery.dataEditor"

#   members = [
#     "${google_logging_project_sink.k8s_cluster.writer_identity}",
#   ]
# }

# resource "google_project_iam_binding" "logging_sink" {
#   role = "roles/bigquery.dataEditor"

#   members = [
#     "${google_logging_project_sink.logging_sink.writer_identity}",
#   ]
# }

# resource "google_project_iam_binding" "service_account" {
#   role = "roles/bigquery.dataEditor"

#   members = [
#     "${google_logging_project_sink.service_account.writer_identity}",
#   ]
# }
